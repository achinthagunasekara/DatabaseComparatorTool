package GUI;

import DBTools.DBOperationManager;
import DBTools.SqlStatementGenerator;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;

/**
 * @author: Archie Gunasekara
 * @date: 2013.07.02
 */
public class TableComparator extends javax.swing.JPanel {

    private MainFrame mf;
    private DBOperationManager dbOperationManager;
    private DataTablePanel dTablePanel;
    private SqlStatementGenerator sqlGen;
    private  HashMap<String, ArrayList> currentTableInfo;
    
    /**
     * Creates new form TableComparator
     */
    public TableComparator(MainFrame mf, DBOperationManager dbOperationManager, String title) {
	initComponents();
	this.mf = mf;
	this.dbOperationManager = dbOperationManager;
	populateTablesList();
	
	TitledBorder border = BorderFactory.createTitledBorder(title);
	generateSql.setEnabled(false);
	setBorder(border);
    }
    
    private void populateTablesList() {
	
	try {
	
	    for(String s: dbOperationManager.getTablesList()) {
		
		tables.addItem(s);
	    }
	}
	catch (SQLException sqlEx) {
	    
	    JOptionPane.showMessageDialog(this, "Error getting the tables list : " + sqlEx.getMessage());
	}
    }
    
    public String getSelectedTable() {
	
	return tables.getSelectedItem().toString();
    }
    
    public void displayData(ArrayList<String> columnNames, ArrayList<String[]> data, String tableName) {
		
	if(dTablePanel != null) {
	    
	    dTablePanel.setVisible(false);
	}
	
	dTablePanel= new DataTablePanel(columnNames, data);	
	tablePanel.add(dTablePanel);
	
	//only show generate sql button if there is data
	if(data.size() > 0) {
	    
	    generateSql.setEnabled(true);
	    sqlGen = new SqlStatementGenerator(columnNames, data, tableName);
	}
	else {
	    
	    generateSql.setEnabled(false);
	}
	
	validate();
    }
    
    public void setInfoLabelText(String text) {
	
	infoLabel.setText(text);
	validate();
    }
    
    public String getWherePart() {
	
	return currentTableInfo.get("COL_NAMES").get(columns.getSelectedIndex()) + " " + where.getText();
    }
    
    private void updateColumnsComboBox() {
	
	columns.removeAllItems();

	try {
	    
	    currentTableInfo = dbOperationManager.getTableInfo(this.getSelectedTable());
	    
	    for(int i = 0; i < currentTableInfo.get("COL_NAMES").size(); i++) {

		columns.addItem(currentTableInfo.get("COL_NAMES").get(i) + " (" + currentTableInfo.get("COL_TYPES").get(i) + ")");
	    }
	    
	    mf.getCompData().setColListVals(currentTableInfo.get("COL_NAMES"));
	}
	catch (SQLException sqlEx) {
	    
	    JOptionPane.showMessageDialog(this, "Error getting the selected table information : " + sqlEx.getMessage());
	}
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        selectLabel = new javax.swing.JLabel();
        tables = new javax.swing.JComboBox();
        tablePanel = new javax.swing.JPanel();
        infoLabel = new javax.swing.JLabel();
        generateSql = new javax.swing.JButton();
        columns = new javax.swing.JComboBox();
        where = new javax.swing.JTextField();
        whereLabel = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(500, 550));
        setMinimumSize(new java.awt.Dimension(500, 550));
        setPreferredSize(new java.awt.Dimension(500, 550));
        setLayout(new java.awt.GridBagLayout());

        selectLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        selectLabel.setText("Please Select a Table");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(selectLabel, gridBagConstraints);

        tables.setPreferredSize(new java.awt.Dimension(310, 20));
        tables.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablesMouseClicked(evt);
            }
        });
        tables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(tables, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(tablePanel, gridBagConstraints);

        infoLabel.setForeground(new java.awt.Color(255, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(infoLabel, gridBagConstraints);

        generateSql.setText("Generate SQL");
        generateSql.setActionCommand("generateSql");
        generateSql.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateSqlActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(generateSql, gridBagConstraints);

        columns.setPreferredSize(new java.awt.Dimension(200, 20));
        columns.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                columnsMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 8);
        add(columns, gridBagConstraints);

        where.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(where, gridBagConstraints);

        whereLabel.setText("WHERE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 8);
        add(whereLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void generateSqlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateSqlActionPerformed

	TextDisplayFrame textDisplay = new TextDisplayFrame("Genereated SQL", sqlGen.getSql());
	textDisplay.setVisible(true);
	textDisplay.toFront();
    }//GEN-LAST:event_generateSqlActionPerformed

    private void tablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablesActionPerformed

    private void tablesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablesMouseClicked
	
	columns.removeAllItems();
    }//GEN-LAST:event_tablesMouseClicked

    private void columnsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_columnsMouseClicked

	updateColumnsComboBox();
    }//GEN-LAST:event_columnsMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox columns;
    private javax.swing.JButton generateSql;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel selectLabel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JComboBox tables;
    private javax.swing.JTextField where;
    private javax.swing.JLabel whereLabel;
    // End of variables declaration//GEN-END:variables
}
