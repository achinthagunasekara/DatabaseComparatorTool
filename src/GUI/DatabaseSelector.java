package GUI;

import DBTools.ConnectionTypes;
import DBTools.DBConnector;
import DBTools.DBOperationManager;
import MainApp.AppStateHolder;
import java.awt.Color;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 * @author: Archie Gunasekara
 * @date: 2013.07.02
 */
public class DatabaseSelector extends javax.swing.JPanel {
  
    private MainFrame mf;
    private AppStateHolder appState;
    private int serverNumber;
    
    /**
     * Creates new form DatabaseSelector
     */
    public DatabaseSelector(MainFrame mf, AppStateHolder appState, int serverNumber) {
	initComponents();
	this.mf = mf;
	this.appState = appState;
	this.serverNumber = serverNumber;
    }
    
    public String getServerAddr() {
	
	return server.getText();
    }
    
    public String getDatabase() {
	
	return database.getSelectedItem().toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPasswordField1 = new javax.swing.JPasswordField();
        serverLabel = new javax.swing.JLabel();
        portLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        databasesLabel = new javax.swing.JLabel();
        server = new javax.swing.JTextField();
        port = new javax.swing.JTextField();
        user = new javax.swing.JTextField();
        database = new javax.swing.JComboBox();
        connect = new javax.swing.JButton();
        pass = new javax.swing.JPasswordField();
        panelTitle = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        setLayout(new java.awt.GridBagLayout());

        serverLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        serverLabel.setText("Server");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(serverLabel, gridBagConstraints);

        portLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        portLabel.setText("Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(portLabel, gridBagConstraints);

        userLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        userLabel.setText("User");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(userLabel, gridBagConstraints);

        passLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passLabel.setText("Pass");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(passLabel, gridBagConstraints);

        databasesLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        databasesLabel.setText("Databases");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(databasesLabel, gridBagConstraints);

        server.setPreferredSize(new java.awt.Dimension(200, 20));
        server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(server, gridBagConstraints);

        port.setToolTipText("");
        port.setPreferredSize(new java.awt.Dimension(200, 20));
        port.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(port, gridBagConstraints);

        user.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(user, gridBagConstraints);

        database.setPreferredSize(new java.awt.Dimension(200, 20));
        database.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                databaseMouseClicked(evt);
            }
        });
        database.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                databaseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(database, gridBagConstraints);

        connect.setText("Connect");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 0, 0);
        add(connect, gridBagConstraints);

        pass.setToolTipText("");
        pass.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(pass, gridBagConstraints);

        panelTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        panelTitle.setText("Server");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(panelTitle, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void serverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serverActionPerformed

    private void portActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portActionPerformed

    private void databaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_databaseActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_databaseActionPerformed

    private void databaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_databaseMouseClicked

	database.removeAllItems();
	
	try {
            
	    DBConnector dbc = new DBConnector(appState.getConnectionType(), server.getText(), port.getText(), user.getText(), pass.getText());	    
   
	    for(String s : dbc.getDatabases()) {
		
		database.addItem(s);
	    }
	    
	    this.validate();
	}
	catch(Exception ex) {
	    
	    JOptionPane.showMessageDialog(this, ex.getMessage());
	}
    }//GEN-LAST:event_databaseMouseClicked

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
	try {
	    
	    DBConnector dbc = new DBConnector(appState.getConnectionType(), server.getText(), port.getText(), user.getText(), pass.getText());
	    
	    switch(serverNumber) {
		
		case 1:
		    appState.setDbOperationManagerOne(new DBOperationManager(dbc.createDbConnection(database.getSelectedItem().toString())));
		    break;
		    
		case 2:
		    appState.setDbOperationManagerTwo(new DBOperationManager(dbc.createDbConnection(database.getSelectedItem().toString())));
		    break;
		    
		default:
		    throw new Exception("Unknown server number");
	    }
	    
	    server.setEnabled(false);
	    port.setEnabled(false);
	    user.setEnabled(false);
	    pass.setEnabled(false);
	    database.setEnabled(false);
	    panelTitle.setText("Connected!");
	    connect.setEnabled(false);
	    panelTitle.setForeground(Color.green);
	    mf.checkReadyAndGo();
	}
	catch (SQLException sqlEx) {
	    
	    JOptionPane.showMessageDialog(this, "Error getting a Connection object : " + sqlEx.getMessage());
	}
	catch (Exception ex) {
	    
	    JOptionPane.showMessageDialog(this, "Other Error : " + ex.getMessage());
	}
    }//GEN-LAST:event_connectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connect;
    private javax.swing.JComboBox database;
    private javax.swing.JLabel databasesLabel;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel panelTitle;
    private javax.swing.JPasswordField pass;
    private javax.swing.JLabel passLabel;
    private javax.swing.JTextField port;
    private javax.swing.JLabel portLabel;
    private javax.swing.JTextField server;
    private javax.swing.JLabel serverLabel;
    private javax.swing.JTextField user;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
